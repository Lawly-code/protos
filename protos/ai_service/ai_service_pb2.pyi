"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ImproveTextRequest(google.protobuf.message.Message):
    """Request message for the ImproveText method"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_PROMPT_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    MAX_TOKENS_FIELD_NUMBER: builtins.int
    user_prompt: builtins.str
    """The original text to improve"""
    temperature: builtins.float
    """Optional parameters"""
    max_tokens: builtins.int
    def __init__(
        self,
        *,
        user_prompt: builtins.str = ...,
        temperature: builtins.float | None = ...,
        max_tokens: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "max_tokens", b"max_tokens", "temperature", b"temperature"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "max_tokens", b"max_tokens", "temperature", b"temperature", "user_prompt", b"user_prompt"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_tokens", b"_max_tokens"]) -> typing.Literal["max_tokens"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_temperature", b"_temperature"]) -> typing.Literal["temperature"] | None: ...

global___ImproveTextRequest = ImproveTextRequest

@typing.final
class AIChatRequest(google.protobuf.message.Message):
    """Request message for the AIChat method"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_PROMPT_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    MAX_TOKENS_FIELD_NUMBER: builtins.int
    user_prompt: builtins.str
    """The question or message for the AI"""
    temperature: builtins.float
    """Optional parameters"""
    max_tokens: builtins.int
    def __init__(
        self,
        *,
        user_prompt: builtins.str = ...,
        temperature: builtins.float | None = ...,
        max_tokens: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "max_tokens", b"max_tokens", "temperature", b"temperature"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "max_tokens", b"max_tokens", "temperature", b"temperature", "user_prompt", b"user_prompt"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_tokens", b"_max_tokens"]) -> typing.Literal["max_tokens"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_temperature", b"_temperature"]) -> typing.Literal["temperature"] | None: ...

global___AIChatRequest = AIChatRequest

@typing.final
class CustomTemplateRequest(google.protobuf.message.Message):
    """Request message for the CustomTemplate method"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_PROMPT_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    MAX_TOKENS_FIELD_NUMBER: builtins.int
    user_prompt: builtins.str
    """Input data for template generation"""
    temperature: builtins.float
    """Optional parameters"""
    max_tokens: builtins.int
    def __init__(
        self,
        *,
        user_prompt: builtins.str = ...,
        temperature: builtins.float | None = ...,
        max_tokens: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "max_tokens", b"max_tokens", "temperature", b"temperature"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "max_tokens", b"max_tokens", "temperature", b"temperature", "user_prompt", b"user_prompt"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_tokens", b"_max_tokens"]) -> typing.Literal["max_tokens"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_temperature", b"_temperature"]) -> typing.Literal["temperature"] | None: ...

global___CustomTemplateRequest = CustomTemplateRequest

@typing.final
class TextResponse(google.protobuf.message.Message):
    """Response message containing the AI's reply"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSISTANT_REPLY_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    assistant_reply: builtins.str
    """The AI's response text"""
    @property
    def metadata(self) -> global___ResponseMetadata:
        """Additional metadata about the response (optional)"""

    def __init__(
        self,
        *,
        assistant_reply: builtins.str = ...,
        metadata: global___ResponseMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_metadata", b"_metadata", "metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_metadata", b"_metadata", "assistant_reply", b"assistant_reply", "metadata", b"metadata"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_metadata", b"_metadata"]) -> typing.Literal["metadata"] | None: ...

global___TextResponse = TextResponse

@typing.final
class ResponseMetadata(google.protobuf.message.Message):
    """Metadata about the response"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    TOKENS_USED_FIELD_NUMBER: builtins.int
    timestamp: builtins.int
    """Timestamp when the response was generated"""
    model: builtins.str
    """Model used for generation"""
    tokens_used: builtins.int
    """Tokens used in the request"""
    def __init__(
        self,
        *,
        timestamp: builtins.int = ...,
        model: builtins.str = ...,
        tokens_used: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["model", b"model", "timestamp", b"timestamp", "tokens_used", b"tokens_used"]) -> None: ...

global___ResponseMetadata = ResponseMetadata
