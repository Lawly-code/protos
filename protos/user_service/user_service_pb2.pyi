"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetUserInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    user_id: builtins.int
    def __init__(
        self,
        *,
        user_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["user_id", b"user_id"]) -> None: ...

global___GetUserInfoRequest = GetUserInfoRequest

@typing.final
class Tariff(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    id: builtins.int
    name: builtins.str
    description: builtins.str
    price: builtins.int
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        price: builtins.int = ...,
        features: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "features", b"features", "id", b"id", "name", b"name", "price", b"price"]) -> None: ...

global___Tariff = Tariff

@typing.final
class UserInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    TARIFF_FIELD_NUMBER: builtins.int
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    COUNT_LAWYERS_FIELD_NUMBER: builtins.int
    CONSULTATIONS_TOTAL_FIELD_NUMBER: builtins.int
    CONSULTATIONS_USED_FIELD_NUMBER: builtins.int
    CAN_USER_AI_FIELD_NUMBER: builtins.int
    CAN_CREATE_CUSTOM_TEMPLATES_FIELD_NUMBER: builtins.int
    UNLIMITED_DOCUMENTS_FIELD_NUMBER: builtins.int
    user_id: builtins.int
    start_date: builtins.str
    end_date: builtins.str
    count_lawyers: builtins.int
    consultations_total: builtins.int
    consultations_used: builtins.int
    can_user_ai: builtins.bool
    can_create_custom_templates: builtins.bool
    unlimited_documents: builtins.bool
    @property
    def tariff(self) -> global___Tariff: ...
    def __init__(
        self,
        *,
        user_id: builtins.int = ...,
        tariff: global___Tariff | None = ...,
        start_date: builtins.str = ...,
        end_date: builtins.str = ...,
        count_lawyers: builtins.int = ...,
        consultations_total: builtins.int = ...,
        consultations_used: builtins.int = ...,
        can_user_ai: builtins.bool = ...,
        can_create_custom_templates: builtins.bool = ...,
        unlimited_documents: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["tariff", b"tariff"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["can_create_custom_templates", b"can_create_custom_templates", "can_user_ai", b"can_user_ai", "consultations_total", b"consultations_total", "consultations_used", b"consultations_used", "count_lawyers", b"count_lawyers", "end_date", b"end_date", "start_date", b"start_date", "tariff", b"tariff", "unlimited_documents", b"unlimited_documents", "user_id", b"user_id"]) -> None: ...

global___UserInfoResponse = UserInfoResponse
